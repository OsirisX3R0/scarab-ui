@import 'variables';
@import 'mixins';

progress {
    &[value] {
        -webkit-appearance: none;
        appearance: none;
        &::-webkit-progress-bar {
            background-color: #ccc;
            border-radius: 4px;
        }
        &::-webkit-progress-value {
            border-radius: 4px;
        }
    }
    &.sc {
        &-progress {
            &--primary {
                &::-webkit-progress-value {
                    background-color: $primary;
                }
            }
            &--secondary {
                &::-webkit-progress-value {
                    background-color: $secondary;
                }
            }
            &--info {
                &::-webkit-progress-value {
                    background-color: $info;
                }
            }
            &--success {
                &::-webkit-progress-value {
                    background-color: $success;
                }
            }
            &--warn {
                &::-webkit-progress-value {
                    background-color: $warn;
                }
            }
            &--error {
                &::-webkit-progress-value {
                    background-color: $error;
                }
            }
            &--light {
                &::-webkit-progress-value {
                    background-color: $bg-light;
                }
            }
            &--dark {
                &::-webkit-progress-value {
                    background-color: $bg-dark;
                }
            }
        }
    }
}

.sc-loader {
    width: 2rem;
    height: 2rem;
    display: inline-block;
    &--pulse {
        &::after {
            content: '';
            width: 2rem;
            height: 2rem;
            background-color: #ccc;
            display: inline-block;
            border-radius: 50%;
            animation: 1s linear infinite pulse;            
        }
    }
    
    &--spin {       
        &::after {
            content: "C";
            font-size: 2rem;
            font-weight: bolder;
            color: #ccc;
            display: inline-block;
            animation: 1s linear infinite spin;
            place-self: center;
        }
    }

    &--sm {
        width: 1.5rem;
        height: 1.5rem;
        &.sc-loader--pulse {
            &::after {
                content: '';
                width: 1.5rem;
                height: 1.5rem;
                animation: 1s linear infinite pulse;
            }
        }
        &.sc-loader--spin {
            &::after {
                font-size: 1.5rem;
            }
        }
    }

    &--lg {
        width: 2.75rem;
        height: 2.75rem;
        &.sc-loader--pulse {
            &::after {
                content: '';
                width: 2.75rem;
                height: 2.75rem;
                animation: 1s linear infinite pulse;
            }
        }
        &.sc-loader--spin {
            &::after {
                font-size: 2.75rem;
            }
        }
    }

    &--primary {
        &.sc-loader--pulse {
            &::after {
                background-color: $primary;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $primary;
            }
        }
    }
    
    &--secondary {
        &.sc-loader--pulse {
            &::after {
                background-color: $secondary;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $secondary;
            }
        }
    }

    &--info {
        &.sc-loader--pulse {
            &::after {
                background-color: $info;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $info;
            }
        }
    }

    &--success {
        &.sc-loader--pulse {
            &::after {
                background-color: $success;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $success;
            }
        }
    }

    &--warn {
        &.sc-loader--pulse {
            &::after {
                background-color: $warn;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $warn;
            }
        }
    }

    &--error {
        &.sc-loader--pulse {
            &::after {
                background-color: $error;
            }
        }
        &.sc-loader--spin {
            &::after {
                color: $error;
            }
        }
    }

    &--light {
        &.sc-loader--pulse {
            &::after {
                background-color: darken($bg-light, 10%);
            }
        }
        &.sc-loader--spin {
            &::after {
                color: darken($bg-light, 10%);
            }
        }
    }

    &--dark {
        &.sc-loader--pulse {
            &::after {
                background-color: darken($bg-dark, 10%);
            }
        }
        &.sc-loader--spin {
            &::after {
                color: darken($bg-dark, 10%);
            }
        }
    }
}

.loader {
    &.pulse {
        width: 2rem;
        height: 2rem;
        display: inline-grid;
        .inner {
            width: 2rem;
            height: 2rem;
            background-color: #ccc;
            border-radius: 50%;
            place-self: center;
            animation: 1s linear infinite pulse;
        }

        &.sm {
            width: 1.5rem;
            height: 1.5rem;
            .inner {
                width: 1.5rem;
                height: 1.5rem;
                animation: 1s linear infinite pulse;
            }
        }

        &.lg {
            width: 2.75rem;
            height: 2.75rem;
            .inner {
                width: 2.75rem;
                height: 2.75rem;
                animation: 1s linear infinite pulse;
            }
        }

        &.primary {
            .inner {
                background-color: $primary;
            }
        }
        &.secondary {
            .inner {
                background-color: $secondary;
            }
        }
        &.info {
            .inner {
                background-color: $info;
            }
        }
        &.success {
            .inner {
                background-color: $success;
            }
        }
        &.warn {
            .inner {
                background-color: $warn;
            }
        }
        &.error {
            .inner {
                background-color: $error;
            }
        }
        &.light {
            .inner {
                background-color: darken($bg-light, 10%);
            }
        }
        &.dark {
            .inner {
                background-color: darken($bg-dark, 10%);
            }
        }
    }

    &.spin {       
        width: 2rem;
        height: 2rem;
        display: inline-grid;
        .inner {
            display: inherit;
            &::after {
                content: "C";
                font-size: 2rem;
                font-weight: bolder;
                color: #ccc;
                animation: 1s linear infinite spin;
                place-self: center;
            }
        }

        &.sm {
            width: 1.5rem;
            height: 1.5rem;
            .inner {
                &::after {
                    font-size: 1.5rem;
                }
            }
        }
        &.lg {
            width: 2.75rem;
            height: 2.75rem;
            .inner {
                &::after {
                    font-size: 2.75rem;
                }
            }
        }

        &.primary {
            .inner::after {
                color: $primary;
            }
        }
        &.secondary {
            .inner::after {
                color: $secondary;
            }
        }
        &.info {
            .inner::after {
                color: $info;
            }
        }
        &.success {
            .inner::after {
                color: $success;
            }
        }
        &.warn {
            .inner::after {
                color: $warn;
            }
        }
        &.error {
            .inner::after {
                color: $error;
            }
        }
        &.light {
            .inner::after {
                color: darken($bg-light, 10%);
            }
        }
        &.dark {
            .inner::after {
                color: $bg-dark;
            }
        }
    }
}
    
@keyframes pulse {
    from {
        transform: scale(0);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    to {
        transform: scale(1);
        opacity: 0;
    }
}
@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}